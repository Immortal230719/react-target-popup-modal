{"version":3,"sources":["cat.png","../../src/component/TargetPopup/index.tsx","../../src/component/TargetPopupRenderWrapper/index.tsx","App.tsx","index.tsx"],"names":["module","exports","nodeObj","bottom","height","left","right","top","width","x","y","TargetPopup","isCanInteractive","querySelector","padding","queryTop","queryBottom","queryLeft","queryRight","queryTopPercent","queryBottomPercent","queryLeftPercent","queryRightPercent","renderElem","color","useState","useEffect","elem","document","timer","setTimeout","setTrigger","prev","clearTimeout","setNode","React","className","styles","style","Math","node","transition","backgroundColor","xmlns","viewBox","d","fill","getStyles","transform","Number","TargetPopupRenderWrapper","position","distance","distanceY","children","setClassName","Example","setPosition","distancePX","setDistancePX","distancePercent","setDistancePercent","rotate","setRotate","onClick","e","preventDefault","id","place","src","cat","alt","renderExample","type","htmlFor","onChange","currentTarget","valueAsNumber","min","max","name","defaultValue","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ec34eb3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.b9693c51.png\";","import React, { useEffect, useState } from 'react';\nimport styles from './styles.module.css';\n\nexport let nodeObj = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport type NodeRect = typeof nodeObj;\n\nexport type TargetPopupProps = {\n  isCanInteractive?: boolean;\n  querySelector?: string;\n  padding?: number;\n  queryTop?: number;\n  queryBottom?: number;\n  queryLeft?: number;\n  queryRight?: number;\n  queryTopPercent?: number;\n  queryBottomPercent?: number;\n  queryLeftPercent?: number;\n  queryRightPercent?: number;\n  color?: string;\n  renderElem?: (node: NodeRect) => JSX.Element;\n};\n\nexport const TargetPopup: React.FC<TargetPopupProps> = React.memo(\n  ({\n    isCanInteractive = true,\n    querySelector = '',\n    padding = 0,\n    queryTop = 0,\n    queryBottom = 0,\n    queryLeft = 0,\n    queryRight = 0,\n    queryTopPercent = 0,\n    queryBottomPercent = 0,\n    queryLeftPercent = 0,\n    queryRightPercent = 0,\n    renderElem = null,\n    color = 'rgba(0, 0, 0, 0.4)',\n  }) => {\n    const [node, setNode] = useState(nodeObj);\n    const [trigger, setTrigger] = useState(0);\n\n    useEffect(() => {\n      if (querySelector) {\n        const elem: Element | null = document.querySelector(querySelector);\n        if (!elem || 'width' in elem || 'height' in elem) {\n          const timer = setTimeout(() => {\n            setTrigger((prev) => prev + 1);\n          }, 100);\n\n          return () => clearTimeout(timer);\n        }\n        if (elem) {\n          setTrigger(0);\n          nodeObj = elem.getBoundingClientRect();\n          setNode(elem.getBoundingClientRect());\n        }\n      }\n      return undefined;\n    }, [querySelector, trigger]);\n\n    return (\n      <React.Fragment>\n        {querySelector && (\n          <React.Fragment>\n            {renderElem && renderElem(node)}\n            <div\n              className={styles.targetPopup}\n              style={{\n                bottom: `calc(100vh + ${queryTopPercent}vh - ${\n                  Math.round(node.y) - padding - queryTop\n                }px)`,\n                right: `calc(100vw${\n                  queryRightPercent ? ' - ' + queryRightPercent + 'vw' : ''\n                } - ${Math.round(node.x) + padding}px - ${\n                  Math.round(node.width) + queryRight\n                }px)`,\n                transition: '0.5s all',\n                backgroundColor: color,\n              }}\n            >\n              <div className={styles.relative}>\n                <div className={styles.targetPopup_top}>\n                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 400'>\n                    <g>\n                      <path d='M 0 0 H 400 V 400 Q 350 50 0 0' fill={color} />\n                    </g>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div\n              className={styles.targetPopup}\n              style={{\n                left: `calc(${\n                  queryRightPercent ? queryRightPercent + 'vw + ' : ''\n                }${Math.round(node.x) + padding}px + ${\n                  Math.round(node.width) + queryRight\n                }px)`,\n                transition: '0.5s all',\n                top: 0,\n                backgroundColor: color,\n              }}\n            />\n            <div\n              className={styles.targetPopup}\n              style={{\n                top: `calc(${\n                  queryBottomPercent ? queryBottomPercent + 'vh + ' : ''\n                }${Math.round(node.y)}px + ${\n                  Math.round(node.height) + padding + queryBottom\n                }px)`,\n                right: `calc(100vw${\n                  queryRightPercent ? ' - ' + queryRightPercent + 'vw' : ''\n                } - ${Math.round(node.x) + padding}px - ${\n                  Math.round(node.width) + queryRight\n                }px)`,\n                transition: '0.5s all',\n                backgroundColor: color,\n              }}\n            >\n              <div className={styles.relative}>\n                <div\n                  className={\n                    isCanInteractive\n                      ? styles.targetPopup_bottom\n                      : `${styles.targetPopup_bottom} ${styles.isUntoucheble}`\n                  }\n                >\n                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 400'>\n                    <g>\n                      <path\n                        d='M 0 400 H 400 V 0 Q 350 350 0 400'\n                        fill={color}\n                      />\n                    </g>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div\n              className={styles.targetPopup}\n              style={{\n                height: `calc(${\n                  queryTopPercent ? queryTopPercent + 'vh + ' : ''\n                }${queryBottomPercent ? queryBottomPercent + 'vh + ' : ''}${\n                  Math.round(node.height) + padding * 2 + queryTop + queryBottom\n                }px)`,\n                top: `calc(${Math.round(node.y) - padding - queryTop}px${\n                  queryTopPercent ? ' - ' + queryTopPercent + 'vh' : ''\n                })`,\n                right: `calc(100vw${\n                  queryLeftPercent ? ' + ' + queryLeftPercent + 'vw' : ''\n                } - ${Math.round(node.x) - padding - queryLeft}px)`,\n                transition: '0.5s all',\n                backgroundColor: color,\n              }}\n            >\n              <div className={styles.relative}>\n                <div className={styles.targetPopup_left}>\n                  <svg\n                    className={styles.bottom_svg}\n                    xmlns='http://www.w3.org/2000/svg'\n                    viewBox='0 0 400 400'\n                  >\n                    <g>\n                      <path d='M 0 0 V 400 H 400 Q 50 350 0 0' fill={color} />\n                    </g>\n                  </svg>\n                  <svg\n                    className={styles.top_svg}\n                    xmlns='http://www.w3.org/2000/svg'\n                    viewBox='0 0 400 400'\n                  >\n                    <g>\n                      <path d='M 0 0 V 400 Q 50 50 400 0 H 0' fill={color} />\n                    </g>\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n        {!querySelector && (\n          <div\n            className={styles.targetPopup}\n            style={{\n              bottom: '0',\n              right: '0',\n              transition: '0.5s all',\n              backgroundColor: color,\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  },\n);\n\nTargetPopup.displayName = 'TargetPopup';\n","import React, { CSSProperties, useEffect, useState } from 'react';\nimport { nodeObj } from '../TargetPopup';\n\nimport styles from './styles.module.css';\n\n// calculate styles for position\nconst getStyles = (\n  position: string,\n  node: typeof nodeObj,\n  distance: number,\n  distanceY: number,\n): CSSProperties | undefined => {\n  switch (position) {\n    case 'TOP':\n      return {\n        top: `${Math.round(node.y) - distance}px`,\n        left: `calc(${\n          Math.round(node.x) + Math.round(node.width) / 2\n        }px + ${distanceY}vw)`,\n        transform: 'translate(-50%, -100%)',\n      };\n    case 'BOTTOM':\n      return {\n        top: `${\n          Math.round(node.y) + Math.round(node.height) + Number(distance)\n        }px`,\n        left: `calc(${\n          Math.round(node.x) + Math.round(node.width) / 2\n        }px + ${distanceY}vw)`,\n        transform: 'translate(-50%, 0)',\n      };\n    case 'RIGHT':\n      return {\n        top: `calc(${\n          Math.round(node.y) + Math.round(node.height) / 2\n        }px + ${distanceY}vh)`,\n        left: `${\n          Math.round(node.x) + Math.round(node.width) + Number(distance)\n        }px`,\n        transform: 'translate(0%, -50%)',\n      };\n    case 'LEFT':\n      return {\n        top: `calc(${\n          Math.round(node.y) + Math.round(node.height) / 2\n        }px + ${distanceY}vh)`,\n        left: `${Math.round(node.x) - distance}px`,\n        transform: 'translate(-100%, -50%)',\n      };\n\n    default:\n      return undefined;\n  }\n};\n\n/*\n  node: object which we getting from getBoundingClientRect native function in TargetPlug component,\n  error: boolean,\n  sucess: boolean,\n  position: can be 'TOP','BOTTOM','RIGHT','LEFT',\n  distance: how much pixels from element,\n  childrens\n*/\n\nexport interface TargetPopupRenderWrapperProps {\n  node: typeof nodeObj;\n  position: string;\n  distance?: number;\n  distanceY?: number;\n  children?: React.ReactNode;\n}\n\nexport const TargetPopupRenderWrapper: React.FC<TargetPopupRenderWrapperProps> = React.memo(\n  ({ node, position = 'TOP', distance = 0, distanceY = 0, children }) => {\n    const [className, setClassName] = useState(styles.TargetPlugRenderWrapper);\n\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        setClassName(\n          `${styles.TargetPlugRenderWrapper} ${styles.TargetPlugRenderWrapper_visible}`,\n        );\n      }, 200);\n      return () => clearTimeout(timer);\n    }, []);\n\n    return (\n      <React.Fragment>\n        {node && (\n          <div\n            className={className}\n            style={getStyles(position, node, distance, distanceY)}\n          >\n            {children}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  },\n);\n\nTargetPopupRenderWrapper.displayName = 'TargetPopupRenderWrapper';\n","import React from 'react';\n\nimport cat from './cat.png';\n\nimport {\n  TargetPopup,\n  TargetPopupRenderWrapper,\n} from 'react-target-popup-modal';\n\nimport 'react-target-popup-modal/dist/index.css';\n\nexport const Example = () => {\n  const [position, setPosition] = React.useState('TOP');\n  const [distancePX, setDistancePX] = React.useState(0);\n  const [distancePercent, setDistancePercent] = React.useState(0);\n  const [rotate, setRotate] = React.useState(false);\n\n  const changeRangePixelHandler = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    e.preventDefault();\n    setDistancePX(e.currentTarget.valueAsNumber);\n  };\n\n  const changeRangePercentHandler = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    e.preventDefault();\n    setDistancePercent(e.currentTarget.valueAsNumber);\n  };\n\n  const rotateHandler = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    setRotate(!rotate);\n  };\n\n  const renderExample = (place: null | string) => {\n    switch (place) {\n      case 'TOP':\n        return (\n          <TargetPopup\n            querySelector='#first'\n            color='#32e23d73'\n            padding={20}\n            renderElem={(node) => (\n              <TargetPopupRenderWrapper\n                node={node}\n                position='TOP'\n                distance={distancePX}\n                distanceY={distancePercent}\n              >\n                <p className='paragraph'>Hello! I've rendered on TOP!</p>\n              </TargetPopupRenderWrapper>\n            )}\n          />\n        );\n      case 'BOTTOM':\n        return (\n          <TargetPopup\n            querySelector='#second'\n            padding={20}\n            color='#4eb4fd8f'\n            renderElem={(node) => (\n              <TargetPopupRenderWrapper\n                node={node}\n                position='BOTTOM'\n                distance={distancePX}\n                distanceY={distancePercent}\n              >\n                <img className='cat' src={cat} alt='cat' />\n                {/* MEOUU!!! I'm from BOTTOM. */}\n              </TargetPopupRenderWrapper>\n            )}\n          />\n        );\n      case 'LEFT':\n        return (\n          <TargetPopup\n            querySelector='#third'\n            padding={20}\n            color='#dc1bfeb3'\n            renderElem={(node: any) => (\n              <TargetPopupRenderWrapper\n                node={node}\n                position='LEFT'\n                distance={distancePX}\n                distanceY={distancePercent}\n              >\n                <img className='cat' src={cat} alt='cat' />\n                MEOUU!!! I'm from LEFT.\n              </TargetPopupRenderWrapper>\n            )}\n          />\n        );\n      case 'RIGHT':\n        return (\n          <TargetPopup\n            querySelector='#first'\n            padding={20}\n            color='#0000006e'\n            renderElem={(node: any) => (\n              <TargetPopupRenderWrapper\n                node={node}\n                position='RIGHT'\n                distance={distancePX}\n                distanceY={distancePercent}\n              >\n                <img className='cat' src={cat} alt='cat' />\n                MEOUU!!!I'm from RIGHT.\n              </TargetPopupRenderWrapper>\n            )}\n          />\n        );\n      case 'UNTOUCHEBLE':\n        return (\n          <TargetPopup\n            querySelector='.absolute-box'\n            isCanInteractive={false}\n            padding={20}\n            renderElem={(node: any) => (\n              <TargetPopupRenderWrapper\n                node={node}\n                position='LEFT'\n                distance={distancePX}\n                distanceY={distancePercent}\n              >\n                Now, you can't click me.\n              </TargetPopupRenderWrapper>\n            )}\n          />\n        );\n      case 'COMMON':\n        return <TargetPopup />;\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <div className='main'>\n        <div\n          className={`absolute-box${rotate ? ' rotate' : ''}`}\n          onClick={rotateHandler}\n        >\n          <span>Click Me!!!</span>\n        </div>\n        <div className='box' id='first'>\n          FIRST\n        </div>\n        <div className='box' id='second'>\n          SECOND\n        </div>\n        <div className='box' id='third'>\n          THIRD\n        </div>\n      </div>\n      {renderExample(position)}\n      <div className='button-group'>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('TOP')}\n        >\n          TOP\n        </button>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('LEFT')}\n        >\n          LEFT\n        </button>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('BOTTOM')}\n        >\n          BOTTOM\n        </button>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('RIGHT')}\n        >\n          RIGHT\n        </button>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('UNTOUCHEBLE')}\n        >\n          UNTOUCHEBLE\n        </button>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('COMMON')}\n        >\n          COMMON\n        </button>\n        <button\n          className='button'\n          type='button'\n          onClick={() => setPosition('')}\n        >\n          RESET\n        </button>\n      </div>\n      <div className='range-group'>\n        <div className='input-range'>\n          <label className='label' htmlFor='distance-px'>\n            distance on main axis in pixels from -300 to 300\n          </label>\n          <input\n            onChange={changeRangePixelHandler}\n            type='range'\n            min='-300'\n            max='300'\n            name='distance-px'\n            id='distance-px'\n            defaultValue={0}\n          />\n          <span className='range-value'>{distancePX}</span>\n        </div>\n        <div className='input-range'>\n          <label className='label' htmlFor='distance-percent'>\n            distance on Y axis relatively main axis in percentages from -50 to\n            50\n          </label>\n          <input\n            onChange={changeRangePercentHandler}\n            type='range'\n            min='-50'\n            max='50'\n            name='distance-percent'\n            id='distance-percent'\n            defaultValue={0}\n          />\n          <span className='range-value'>{distancePercent}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Example } from './App';\n\nReactDOM.render(<Example />, document.getElementById('root'));\n"],"sourceRoot":""}